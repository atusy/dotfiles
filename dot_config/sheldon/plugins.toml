shell = "zsh"

[templates]
defer = "{{ hooks | get: \"pre\" | nl }}{% for file in files %}zsh-defer source \"{{ file }}\"\n{% endfor %}{{ hooks | get: \"post\" | nl }}"

[plugins.zsh-defer]
github = "romkatv/zsh-defer"
hooks.post = 'zcompile() zsh-defer builtin zcompile "$@"'

[plugins.rtx]
inline = """
if ! command -v rtx >/dev/null; then
  (
    set -euo pipefail
    cd "$(mktemp -d)"
    gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys 0x29DDE9E0
    curl https://rtx.pub/install.sh.sig | gpg --decrypt > install.sh
    RTX_INSTALL_PATH="${HOME}/.local/bin/rtx" sh ./install.sh
    rtx install
  )
fi
function my-rtx-activate() {
  eval "$( rtx activate zsh )"
  eval "$( rtx hook-env -s zsh )"
  eval "$( direnv hook zsh )"
}
zsh-defer my-rtx-activate
"""

[plugins.fast-syntax-highlighting]
github = "zdharma-continuum/fast-syntax-highlighting"
apply = ["defer"]

[plugins.zsh-completions]
github = "zsh-users/zsh-completions"
apply = ["defer"]

[plugins.zsh-autosuggestions]
github = "zsh-users/zsh-autosuggestions"
apply = ["defer"]
hooks.pre = "ZSH_AUTOSUGGEST_USE_ASYNC=1; ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=244'"

[plugins.zsh-async]
github = "mafredri/zsh-async"
apply = ["defer"]

[plugins.zsh-256color]
github = "chrissicool/zsh-256color"
apply = ["defer"]

[plugins.git-prompt]
github = "woefe/git-prompt.zsh"
apply = ["defer"]

[plugins.kube-ps1]
github = "jonmosco/kube-ps1"
apply = ["defer"]

[plugins.cd-gitroot]
apply = ["defer"]
github = "mollifier/cd-gitroot"
hooks.post = "alias gd=cd-gitroot"

[plugins.fzf]
github = "junegunn/fzf"

[plugins.zeno]
github = "yuki-yano/zeno.zsh"
apply = ["defer"]
hooks.pre = "export ZENO_ENABLE_SOCK=1"
hooks.post = """
function zeno-my-post() {
  bindkey ' '  zeno-auto-snippet
  bindkey '^m' zeno-auto-snippet-and-accept-line
  bindkey '^i' zeno-completion
  bindkey '^r' zeno-history-selection
  bindkey '^x^s' zeno-insert-snippet
  bindkey '^x^f' zeno-ghq-cd
  ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(zeno-auto-snippet-and-accept-line)
}
zsh-defer zeno-my-post
"""

[plugins.zsh-nvrepl]
github = "atusy/zsh-nvrepl"
apply = ["defer"]
hooks.post = """
if [[ -n $NVIM ]]; then
  function nvrepl-my-post() {
    NVREPL_FALLBACK_ACCEPT_LINE="zeno-auto-snippet-and-accept-line"
    bindkey '^m' nvrepl-or-accept-line
    ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(nvrepl-or-accept-line)
  }
  zsh-defer nvrepl-my-post
fi
"""

[plugins.ghf]
github = "atusy/gh-fzf"
apply = ["defer"]
hooks.post = "alias gh=ghf"

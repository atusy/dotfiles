shell = "zsh"

[templates]
defer = "{{ hooks?.pre | nl }}{% for file in files %}zsh-defer source \"{{ file }}\"\n{% endfor %}{{ hooks?.post | nl }}"
defer-zeno = "{{ hooks?.pre | nl }}{% for file in files %}zsh-defer zeno-source \"{{ file }}\"\n{% endfor %}{{ hooks?.post | nl }}"

[plugins.zsh-defer]
github = "romkatv/zsh-defer"
hooks.post = """
zcompile() zsh-defer builtin zcompile "$@"

# setup mise with bootstrap
# activate can be deferred but should ensure deno is available for zeno.zsh
function my-mise-activate() {
  command -v direnv >/dev/null && eval "$( direnv hook zsh )"
  eval "$( mise activate zsh )" && eval "$( mise hook-env -s zsh )"
  if command -v nvim >/dev/null; then
    export EDITOR=nvim
  fi
}
MISE_INSTALL_ONLY=1 "${HOME}/.local/lastresort/bin/mise" && zsh-defer my-mise-activate
"""

[plugins.fast-syntax-highlighting]
github = "zdharma-continuum/fast-syntax-highlighting"
apply = ["defer"]

[plugins.zsh-completions]
github = "zsh-users/zsh-completions"
apply = ["defer"]

[plugins.zsh-autosuggestions]
github = "zsh-users/zsh-autosuggestions"
apply = ["defer"]
hooks.pre = "ZSH_AUTOSUGGEST_USE_ASYNC=1; ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=244'"

[plugins.zsh-async]
github = "mafredri/zsh-async"
apply = ["defer"]

[plugins.zsh-256color]
github = "chrissicool/zsh-256color"
apply = ["defer"]

[plugins.git-prompt]
github = "woefe/git-prompt.zsh"
apply = ["source"]
hooks.post = """
function git-prompt-my-post() {
  ZSH_THEME_GIT_PROMPT_PREFIX=" "
  ZSH_THEME_GIT_PROMPT_SUFFIX=""
  ZSH_THEME_GIT_PROMPT_UNTRACKED=".."
  ZSH_THEME_GIT_PROMPT_UNMERGED="%{$fg[red]%}x"
  ZSH_THEME_GIT_PROMPT_STAGED="%{$fg[green]%}o"
  ZSH_THEME_GIT_PROMPT_UNSTAGED="%{$fg[red]%}+"
  ZSH_GIT_PROMPT_SHOW_UPSTREAM=full
}
zsh-defer git-prompt-my-post
"""

[plugins.kube-ps1]
github = "jonmosco/kube-ps1"
apply = ["source"]

[plugins.fzf]
github = "junegunn/fzf"

[plugins.zeno]
github = "yuki-yano/zeno.zsh"
apply = ["defer-zeno"]
hooks.pre = """
export ZENO_ENABLE_SOCK=1

# Isolate deno environment
ZENO_DENO_VER=1.39.1
ZENO_DENO_PATH="$HOME/.local/share/mise/installs/deno/$ZENO_DENO_VER/bin"
function zeno-mise() {
  if [[ ! -x "$ZENO_DENO_PATH/deno" ]]; then
    ZENO_DENO_PATH=$( dirname "$( mise exec deno@$ZENO_DENO_VER -- which deno )" )
  fi
}
zsh-defer zeno-mise
function zeno-source() {
  PATH="$ZENO_DENO_PATH:$PATH" DENO_DIR=$HOME/.cache/deno_zeno source "$@"
}
"""
hooks.post = """
function zeno-my-post() {
  bindkey ' '  zeno-auto-snippet
  bindkey '^m' zeno-auto-snippet-and-accept-line
  bindkey '^i' zeno-completion
  bindkey '^r' zeno-history-selection
  bindkey '^x^s' zeno-insert-snippet
  bindkey '^x^f' zeno-ghq-cd
  ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(zeno-auto-snippet-and-accept-line)
}
zsh-defer zeno-my-post
"""

[plugins.zsh-nvrepl]
github = "atusy/zsh-nvrepl"
apply = ["defer"]
hooks.post = """
if [[ -n $NVIM ]]; then
  function nvrepl-my-post() {
    NVREPL_FALLBACK_ACCEPT_LINE="zeno-auto-snippet-and-accept-line"
    bindkey '^m' nvrepl-or-accept-line
    ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(nvrepl-or-accept-line)
  }
  zsh-defer nvrepl-my-post
fi
"""

[plugins.ghf]
github = "atusy/gh-fzf"
apply = ["defer"]
hooks.post = "alias gh=ghf"

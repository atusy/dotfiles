#!/usr/bin/env -S deno --allow-net

import { DOMParser } from "https://deno.land/x/deno_dom@v0.1.49/deno-dom-wasm.ts";

const nixPackage = Deno.args[0];

async function fetchHtml(url: string): Promise<string> {
  const response = await fetch(url);
  if (!response.ok) {
    throw new Error(`Failed to fetch ${url}: ${response.statusText}`);
  }
  return await response.text();
}

function parseTable(html: string): string[][] {
  const doc = new DOMParser().parseFromString(html, "text/html");
  const tbl = doc.querySelector("table");
  if (!tbl) {
    throw new Error("Table not found");
  }

  const table = Array.from(tbl.querySelectorAll("th")).map((th, i) => {
    const contents = Array.from(tbl.querySelectorAll("tbody tr")).map((tr) => {
      return Array.from(tr.querySelectorAll("td"))[i].textContent;
    });
    const column = [th.textContent, ...contents];
    const maxLen = Math.max(...column.map((s) => s.length));
    return column.map((s) => s.padEnd(maxLen + 2));
  });

  return table;
}

function printTable(columns: string[][]): void {
  columns[0].forEach((_, i) => {
    console.log(columns.map((column) => column[i]).join(" "));
  });
}

async function main() {
  const url =
    `https://lazamar.co.uk/nix-versions/?channel=nixpkgs-unstable&package=${nixPackage}`;
  const html = await fetchHtml(url);
  const table = parseTable(html);
  printTable(table);
}

if (import.meta.main) {
  await main();
}

// vim: filetype=typescript


#!/usr/bin/env -S deno --allow-net

/*
Find hash of a desired version of nixpkg and use it in nix-shell.

$ nix-shell -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/<hash>.tar.gz -p <pkg>
*/

import {
  DOMParser,
  Element,
} from "https://deno.land/x/deno_dom@v0.1.49/deno-dom-wasm.ts";

const nixPackage = Deno.args[0];

async function fetchHtml(url: string): Promise<string> {
  const response = await fetch(url);
  if (!response.ok) {
    throw new Error(`Failed to fetch ${url}: ${response.statusText}`);
  }
  return await response.text();
}

function getTable(html: string): Element {
  const doc = new DOMParser().parseFromString(html, "text/html");
  const table = doc.querySelector("table");
  if (!table) {
    throw new Error("Table not found");
  }
  return table;
}

function printTable(table: Element): void {
  const contents = Array.from(table.querySelectorAll("tr")).map((tr, i) =>
    Array.from(tr.querySelectorAll(i === 0 ? "th" : "td")).map((th) =>
      th.textContent
    )
  );

  const maxLens = contents[0].map(
    (_, i) => Math.max(...contents.map((row) => row[i].length)),
  );

  contents.map(
    (row) => console.log(row.map((s, i) => s.padEnd(maxLens[i])).join("  ")),
  );
}

async function main() {
  const url =
    `https://lazamar.co.uk/nix-versions/?channel=nixpkgs-unstable&package=${nixPackage}`;
  const html = await fetchHtml(url);
  const table = getTable(html);
  printTable(table);
}

if (import.meta.main) {
  await main();
}

// vim: filetype=typescript

